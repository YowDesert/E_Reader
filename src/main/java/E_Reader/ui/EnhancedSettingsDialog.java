package E_Reader.ui;

import E_Reader.settings.SettingsManager;
import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.animation.*;
import javafx.util.Duration;

/**
 * Â¢ûÂº∑ÁâàË®≠ÂÆöÂ∞çË©±Ê°Ü - Áèæ‰ª£ÂåñiOSÈ¢®Ê†ºË®≠Ë®à + Âç≥ÊôÇÈ†êË¶ΩÂäüËÉΩ
 */
public class EnhancedSettingsDialog {

    private final SettingsManager settingsManager;
    private final Stage parentStage;
    private Stage dialogStage;

    // UI ÁµÑ‰ª∂
    private ToggleGroup themeGroup;
    private ToggleGroup ocrGroup;
    private Slider brightnessSlider;
    private CheckBox rememberFileCheckBox;
    private CheckBox showPageNumbersCheckBox;
    private CheckBox enableTouchNavCheckBox;
    private Slider autoSaveIntervalSlider;

    // È†êË¶ΩÁµÑ‰ª∂
    private VBox themePreviewBox;
    private Label ocrDetailLabel;
    private ProgressBar brightnessPreview;

    // Ëá®ÊôÇË®≠ÂÆöÔºàÁî®ÊñºÈ†êË¶ΩÔºâ
    private SettingsManager.ThemeMode tempThemeMode;
    private int tempBrightness;

    public EnhancedSettingsDialog(SettingsManager settingsManager, Stage parentStage) {
        this.settingsManager = settingsManager;
        this.parentStage = parentStage;
        this.tempThemeMode = settingsManager.getCurrentTheme();
        this.tempBrightness = settingsManager.getEyeCareBrightness();
        createDialog();
    }

    private void createDialog() {
        dialogStage = new Stage();
        dialogStage.initStyle(StageStyle.UNDECORATED);
        dialogStage.initOwner(parentStage);
        dialogStage.setTitle("Ë®≠ÂÆö");

        // ÂâµÂª∫‰∏ªË¶ÅÂÖßÂÆπ
        VBox mainContent = createMainContent();

        // ÂâµÂª∫Â†¥ÊôØ
        Scene scene = new Scene(mainContent, 700, 750); // Âä†ÂØ¨‰ª•ÂÆπÁ¥çÈ†êË¶Ω
        scene.setFill(null); // ÈÄèÊòéËÉåÊôØ

        dialogStage.setScene(scene);
        dialogStage.centerOnScreen();
    }

    private VBox createMainContent() {
        VBox mainContainer = new VBox();
        mainContainer.setAlignment(Pos.TOP_CENTER);
        mainContainer.setPadding(new Insets(20));
        mainContainer.setStyle(
                "-fx-background-color: linear-gradient(to bottom, " +
                        "rgba(40,40,40,0.98) 0%, " +
                        "rgba(50,50,50,0.98) 100%); " +
                        "-fx-border-color: rgba(255,255,255,0.3); " +
                        "-fx-border-width: 1.5; " +
                        "-fx-border-radius: 16; " +
                        "-fx-background-radius: 16; " +
                        "-fx-effect: dropshadow(gaussian, rgba(0,0,0,0.8), 20, 0, 0, 10);"
        );

        // Ê®ôÈ°åÊ¨Ñ
        HBox titleBar = createTitleBar();

        // ÂÖßÂÆπÂçÄÂüü
        TabPane contentTabs = createContentTabs();

        // ÊåâÈàïÊ¨Ñ
        HBox buttonBar = createButtonBar();

        mainContainer.getChildren().addAll(titleBar, contentTabs, buttonBar);
        VBox.setVgrow(contentTabs, Priority.ALWAYS);

        return mainContainer;
    }

    private HBox createTitleBar() {
        HBox titleBar = new HBox();
        titleBar.setAlignment(Pos.CENTER);
        titleBar.setPadding(new Insets(0, 0, 20, 0));

        Label titleLabel = new Label("‚öôÔ∏è ÊáâÁî®Á®ãÂºèË®≠ÂÆö");
        titleLabel.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-size: 20px; " +
                        "-fx-font-weight: 700;"
        );

        Button closeButton = new Button("‚úï");
        closeButton.setStyle(
                "-fx-background-color: rgba(231,76,60,0.8); " +
                        "-fx-text-fill: white; " +
                        "-fx-border-radius: 50%; " +
                        "-fx-background-radius: 50%; " +
                        "-fx-min-width: 30; " +
                        "-fx-min-height: 30; " +
                        "-fx-max-width: 30; " +
                        "-fx-max-height: 30; " +
                        "-fx-cursor: hand;"
        );
        closeButton.setOnAction(e -> close());

        Region spacer = new Region();
        HBox.setHgrow(spacer, Priority.ALWAYS);

        titleBar.getChildren().addAll(titleLabel, spacer, closeButton);
        return titleBar;
    }

    private TabPane createContentTabs() {
        TabPane tabPane = new TabPane();
        tabPane.setStyle(
                "-fx-background-color: rgba(55,55,55,0.9); " +
                        "-fx-border-radius: 12; " +
                        "-fx-background-radius: 12; " +
                        "-fx-tab-header-area-background-color: rgba(45,45,45,0.9);"
        );

        // Â§ñËßÄ‰∏ªÈ°åÊ®ôÁ±§
        Tab themeTab = createThemeTab();
        themeTab.setText("üé® Â§ñËßÄ");

        // OCRË®≠ÂÆöÊ®ôÁ±§
        Tab ocrTab = createOcrTab();
        ocrTab.setText("üîß OCR");

        // ÂäüËÉΩÈÅ∏È†ÖÊ®ôÁ±§
        Tab functionsTab = createFunctionsTab();
        functionsTab.setText("‚öôÔ∏è ÂäüËÉΩ");

        tabPane.getTabs().addAll(themeTab, ocrTab, functionsTab);
        tabPane.setTabClosingPolicy(TabPane.TabClosingPolicy.UNAVAILABLE);

        return tabPane;
    }

    private Tab createThemeTab() {
        Tab tab = new Tab();
        tab.setClosable(false);

        // ‰ΩøÁî®HBox‰æÜ‰∏¶ÊéíÈ°ØÁ§∫Ë®≠ÂÆöÂíåÈ†êË¶Ω
        HBox mainBox = new HBox(20);
        mainBox.setPadding(new Insets(20));

        // Â∑¶ÂÅ¥ÔºöË®≠ÂÆöÂçÄÂüü
        VBox settingsArea = new VBox(20);
        settingsArea.setPrefWidth(350);

        // Âè≥ÂÅ¥ÔºöÈ†êË¶ΩÂçÄÂüü
        VBox previewArea = createThemePreviewArea();
        previewArea.setPrefWidth(280);

        // ‰∏ªÈ°åÈÅ∏Êìá
        VBox themeSection = createSection("üé® Â§ñËßÄ‰∏ªÈ°å", "ÈÅ∏Êìá‰Ω†ÂñúÊ≠°ÁöÑÈñ±ËÆÄÈ¢®Ê†º");

        themeGroup = new ToggleGroup();
        VBox themeOptions = new VBox(10);

        for (SettingsManager.ThemeMode theme : SettingsManager.ThemeMode.values()) {
            RadioButton themeRadio = createThemeOption(theme);
            themeRadio.setToggleGroup(themeGroup);

            // Ê∑ªÂä†Âç≥ÊôÇÈ†êË¶ΩÂäüËÉΩ
            themeRadio.setOnAction(e -> {
                tempThemeMode = theme;
                updateThemePreview();
            });

            themeOptions.getChildren().add(themeRadio);

            if (theme == settingsManager.getCurrentTheme()) {
                themeRadio.setSelected(true);
            }
        }

        themeSection.getChildren().add(themeOptions);

        // ‰∫ÆÂ∫¶Ë®≠ÂÆö
        VBox brightnessSection = createSection("üîÜ È°ØÁ§∫‰∫ÆÂ∫¶", "Ë™øÊï¥Èñ±ËÆÄËàíÈÅ©Â∫¶");

        brightnessSlider = new Slider(10, 100, settingsManager.getEyeCareBrightness());
        brightnessSlider.setShowTickLabels(true);
        brightnessSlider.setShowTickMarks(true);
        brightnessSlider.setMajorTickUnit(20);
        brightnessSlider.setStyle(
                "-fx-background-color: rgba(70,70,70,0.8); " +
                        "-fx-border-radius: 8; " +
                        "-fx-background-radius: 8;"
        );

        Label brightnessLabel = new Label(String.format("%.0f%%", brightnessSlider.getValue()));
        brightnessLabel.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-weight: bold; " +
                        "-fx-background-color: rgba(52,152,219,0.3); " +
                        "-fx-padding: 5 10; " +
                        "-fx-background-radius: 6;"
        );

        brightnessSlider.valueProperty().addListener((obs, oldVal, newVal) -> {
            tempBrightness = newVal.intValue();
            brightnessLabel.setText(String.format("%.0f%%", newVal.doubleValue()));
            updateBrightnessPreview();
        });

        HBox brightnessControl = new HBox(15);
        brightnessControl.setAlignment(Pos.CENTER_LEFT);
        brightnessControl.getChildren().addAll(brightnessSlider, brightnessLabel);
        HBox.setHgrow(brightnessSlider, Priority.ALWAYS);

        brightnessSection.getChildren().add(brightnessControl);

        settingsArea.getChildren().addAll(themeSection, createSeparator(), brightnessSection);

        // Ê∑ªÂä†Âà∞‰∏ªÂÆπÂô®
        mainBox.getChildren().addAll(settingsArea, previewArea);

        ScrollPane scrollPane = new ScrollPane(mainBox);
        scrollPane.setFitToWidth(true);
        scrollPane.setStyle("-fx-background-color: rgba(50,50,50,0.95); -fx-background: transparent;");

        tab.setContent(scrollPane);
        return tab;
    }

    // ÂâµÂª∫‰∏ªÈ°åÈ†êË¶ΩÂçÄÂüü
    private VBox createThemePreviewArea() {
        VBox previewArea = new VBox(15);
        previewArea.setStyle(
                "-fx-background-color: rgba(60,60,60,0.8); " +
                        "-fx-border-color: rgba(255,255,255,0.2); " +
                        "-fx-border-width: 1; " +
                        "-fx-border-radius: 12; " +
                        "-fx-background-radius: 12; " +
                        "-fx-padding: 20;"
        );

        Label previewTitle = new Label("üì± Âç≥ÊôÇÈ†êË¶Ω");
        previewTitle.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-size: 16px; " +
                        "-fx-font-weight: bold;"
        );

        // ‰∏ªÈ°åÈ†êË¶ΩÊ°Ü
        themePreviewBox = new VBox(10);
        themePreviewBox.setPrefHeight(150);
        themePreviewBox.setPadding(new Insets(15));
        themePreviewBox.setAlignment(Pos.CENTER);

        // ‰∫ÆÂ∫¶È†êË¶Ω
        VBox brightnessPreviewSection = new VBox(8);

        Label brightnessPreviewTitle = new Label("üí° ‰∫ÆÂ∫¶ÊïàÊûú");
        brightnessPreviewTitle.setStyle("-fx-text-fill: white; -fx-font-size: 14px; -fx-font-weight: 600;");

        brightnessPreview = new ProgressBar();
        brightnessPreview.setPrefWidth(200);
        brightnessPreview.setPrefHeight(8);

        brightnessPreviewSection.getChildren().addAll(brightnessPreviewTitle, brightnessPreview);

        previewArea.getChildren().addAll(previewTitle, themePreviewBox, brightnessPreviewSection);

        // ÂàùÂßãÂåñÈ†êË¶Ω
        updateThemePreview();
        updateBrightnessPreview();

        return previewArea;
    }

    // Êõ¥Êñ∞‰∏ªÈ°åÈ†êË¶Ω
    private void updateThemePreview() {
        themePreviewBox.getChildren().clear();

        String bgColor = tempThemeMode.getBackgroundColor();
        String textColor = tempThemeMode.getTextColor();

        themePreviewBox.setStyle(
                "-fx-background-color: " + bgColor + "; " +
                        "-fx-border-color: " + textColor + "; " +
                        "-fx-border-width: 1; " +
                        "-fx-border-radius: 8; " +
                        "-fx-background-radius: 8;"
        );

        Label themeNameLabel = new Label(tempThemeMode.getDisplayName());
        themeNameLabel.setStyle(
                "-fx-text-fill: " + textColor + "; " +
                        "-fx-font-size: 18px; " +
                        "-fx-font-weight: bold;"
        );

        Label sampleText = new Label("ÈÄôË£°ÊòØÊñáÂ≠óÁØÑ‰æã\nËÉåÊôØÈ°èËâ≤Ôºö" + bgColor + "\nÊñáÂ≠óÈ°èËâ≤Ôºö" + textColor);
        sampleText.setStyle(
                "-fx-text-fill: " + textColor + "; " +
                        "-fx-font-size: 12px; " +
                        "-fx-text-alignment: center;"
        );

        // Ê∑ªÂä†‰∏Ä‰∫õË£ùÈ£æÂÖÉÁ¥†
        HBox decorationBox = new HBox(10);
        decorationBox.setAlignment(Pos.CENTER);

        for (int i = 0; i < 3; i++) {
            Region colorDot = new Region();
            colorDot.setPrefSize(12, 12);
            colorDot.setStyle(
                    "-fx-background-color: " + textColor + "; " +
                            "-fx-background-radius: 50%;"
            );
            decorationBox.getChildren().add(colorDot);
        }

        themePreviewBox.getChildren().addAll(themeNameLabel, sampleText, decorationBox);

        // Ê∑ªÂä†Ê∑°ÂÖ•ÂãïÁï´
        FadeTransition fadeIn = new FadeTransition(Duration.millis(300), themePreviewBox);
        fadeIn.setFromValue(0.0);
        fadeIn.setToValue(1.0);
        fadeIn.play();
    }

    // Êõ¥Êñ∞‰∫ÆÂ∫¶È†êË¶Ω
    private void updateBrightnessPreview() {
        double progress = tempBrightness / 100.0;
        brightnessPreview.setProgress(progress);

        // Ê†πÊìö‰∫ÆÂ∫¶Ë™øÊï¥È°èËâ≤
        String brightnesColor;
        if (tempBrightness < 30) {
            brightnesColor = "#e74c3c"; // ‰Ωé‰∫ÆÂ∫¶ - Á¥ÖËâ≤
        } else if (tempBrightness < 70) {
            brightnesColor = "#f39c12"; // ‰∏≠‰∫ÆÂ∫¶ - Ê©ôËâ≤
        } else {
            brightnesColor = "#27ae60"; // È´ò‰∫ÆÂ∫¶ - Á∂†Ëâ≤
        }

        brightnessPreview.setStyle(
                "-fx-accent: " + brightnesColor + "; " +
                        "-fx-background-color: rgba(255,255,255,0.1); " +
                        "-fx-background-radius: 4; " +
                        "-fx-background-insets: 0;"
        );
    }

    private Tab createOcrTab() {
        Tab tab = new Tab();
        tab.setClosable(false);

        HBox mainBox = new HBox(20);
        mainBox.setPadding(new Insets(20));

        // Â∑¶ÂÅ¥ÔºöË®≠ÂÆöÂçÄÂüü
        VBox settingsArea = new VBox(20);
        settingsArea.setPrefWidth(350);

        // Âè≥ÂÅ¥ÔºöË©≥Á¥∞Ë™™ÊòéÂçÄÂüü
        VBox detailArea = createOcrDetailArea();
        detailArea.setPrefWidth(280);

        // OCRÁãÄÊÖãÈ°ØÁ§∫
        VBox statusSection = createSection("üìä OCRÁãÄÊÖã", "Áï∂ÂâçÊñáÂ≠óËæ®Ë≠òË®≠ÂÆö");

        Label statusLabel = new Label("OCR ÂºïÊìéÂ∑≤Â∞±Á∑í");
        statusLabel.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-weight: bold; " +
                        "-fx-background-color: rgba(46,204,113,0.3); " +
                        "-fx-padding: 10 15; " +
                        "-fx-background-radius: 8;"
        );
        statusSection.getChildren().add(statusLabel);

        // OCRÊ®°ÂûãÈÅ∏Êìá
        VBox modelSection = createSection("üîß OCRÊ®°Âûã", "ÈÅ∏ÊìáÊñáÂ≠óË≠òÂà•Á≤æÊ∫ñÂ∫¶");

        ocrGroup = new ToggleGroup();
        VBox modelOptions = new VBox(10);

        for (SettingsManager.OcrModel model : SettingsManager.OcrModel.values()) {
            RadioButton modelRadio = createOcrOption(model);
            modelRadio.setToggleGroup(ocrGroup);

            // Ê∑ªÂä†Ë©≥Á¥∞Ë™™ÊòéÊõ¥Êñ∞
            modelRadio.setOnAction(e -> updateOcrDetails(model));

            modelOptions.getChildren().add(modelRadio);

            if (model == settingsManager.getOcrModel()) {
                modelRadio.setSelected(true);
                updateOcrDetails(model); // ÂàùÂßãÂåñË©≥Á¥∞Ë™™Êòé
            }
        }

        modelSection.getChildren().add(modelOptions);
        settingsArea.getChildren().addAll(statusSection, createSeparator(), modelSection);

        mainBox.getChildren().addAll(settingsArea, detailArea);

        ScrollPane scrollPane = new ScrollPane(mainBox);
        scrollPane.setFitToWidth(true);
        scrollPane.setStyle("-fx-background-color: rgba(50,50,50,0.95); -fx-background: transparent;");

        tab.setContent(scrollPane);
        return tab;
    }

    // ÂâµÂª∫OCRË©≥Á¥∞Ë™™ÊòéÂçÄÂüü
    private VBox createOcrDetailArea() {
        VBox detailArea = new VBox(15);
        detailArea.setStyle(
                "-fx-background-color: rgba(60,60,60,0.8); " +
                        "-fx-border-color: rgba(255,255,255,0.2); " +
                        "-fx-border-width: 1; " +
                        "-fx-border-radius: 12; " +
                        "-fx-background-radius: 12; " +
                        "-fx-padding: 20;"
        );

        Label detailTitle = new Label("üîç Ê®°ÂûãË©≥ÊÉÖ");
        detailTitle.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-size: 16px; " +
                        "-fx-font-weight: bold;"
        );

        ocrDetailLabel = new Label();
        ocrDetailLabel.setStyle(
                "-fx-text-fill: rgba(255,255,255,0.9); " +
                        "-fx-font-size: 12px; " +
                        "-fx-wrap-text: true;"
        );
        ocrDetailLabel.setWrapText(true);

        detailArea.getChildren().addAll(detailTitle, ocrDetailLabel);
        return detailArea;
    }

    // Êõ¥Êñ∞OCRÊ®°ÂûãË©≥Á¥∞Ë™™Êòé
    private void updateOcrDetails(SettingsManager.OcrModel model) {
        String detailText = "";

        switch (model) {
            case FAST:
                detailText = "üìà Âø´ÈÄüÊ®°ÂûãÁâπÈªûÔºö\n\n" +
                        "‚Ä¢ Ë≠òÂà•ÈÄüÂ∫¶Ôºö‚ö° Ê•µÂø´\n" +
                        "‚Ä¢ Ê∫ñÁ¢∫ÁéáÔºö‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ (Á¥Ñ85%)\n" +
                        "‚Ä¢ ÈÅ©Áî®Â†¥ÊôØÔºöÊó•Â∏∏Èñ±ËÆÄ„ÄÅÂø´ÈÄüÊéÉÊèè\n" +
                        "‚Ä¢ Ë®òÊÜ∂È´îÂç†Áî®Ôºöüíæ ËºÉ‰Ωé (~200MB)\n" +
                        "‚Ä¢ Ë™ûË®ÄÊîØÊè¥Ôºö‚úÖ ‰∏≠Ëã±ÊñáÂü∫Á§éË≠òÂà•\n\n" +
                        "üîß ÊäÄË°ìÁ¥∞ÁØÄÔºö\n" +
                        "‚Ä¢ ‰ΩøÁî® LSTM Á•ûÁ∂ìÁ∂≤Ë∑Ø\n" +
                        "‚Ä¢ Âü∫Êñº tessdata_fast Ë®ìÁ∑¥Ë≥áÊñô\n" +
                        "‚Ä¢ ÈÅ©ÂêàÁßªÂãïË®≠ÂÇôÂíå‰ΩéÈÖçÈõªËÖ¶\n\n" +
                        "üí° Âª∫Ë≠∞‰ΩøÁî®ÊÉÖÊ≥ÅÔºö\n" +
                        "‚Ä¢ Êº´Áï´„ÄÅÂ∞èË™™Á≠âÊñáÂ≠óËºÉÁÇ∫Á∞°ÂñÆÁöÑÂÖßÂÆπ\n" +
                        "‚Ä¢ ÈúÄË¶ÅÂø´ÈÄüÁÄèË¶ΩÂ§ßÈáèÈ†ÅÈù¢ÊôÇ\n" +
                        "‚Ä¢ ÈõªËÖ¶ÊÄßËÉΩËºÉ‰ΩéÊôÇÁöÑÊúÄ‰Ω≥ÈÅ∏Êìá";
                break;

            case BEST:
                detailText = "üéØ ÊúÄ‰Ω≥Ê®°ÂûãÁâπÈªûÔºö\n\n" +
                        "‚Ä¢ Ë≠òÂà•ÈÄüÂ∫¶Ôºö‚è≥ ËºÉÊÖ¢‰ΩÜÁ≤æÁ¢∫\n" +
                        "‚Ä¢ Ê∫ñÁ¢∫ÁéáÔºö‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ (Á¥Ñ95%)\n" +
                        "‚Ä¢ ÈÅ©Áî®Â†¥ÊôØÔºöÂ≠∏Ë°ìË´ñÊñá„ÄÅÈáçË¶ÅÊñá‰ª∂\n" +
                        "‚Ä¢ Ë®òÊÜ∂È´îÂç†Áî®Ôºöüíæ ËºÉÈ´ò (~500MB)\n" +
                        "‚Ä¢ Ë™ûË®ÄÊîØÊè¥Ôºö‚úÖ Â§öË™ûË®ÄÈ´òÁ≤æÂ∫¶Ë≠òÂà•\n\n" +
                        "üîß ÊäÄË°ìÁ¥∞ÁØÄÔºö\n" +
                        "‚Ä¢ ‰ΩøÁî®ÂÖàÈÄ≤ÁöÑ Transformer Êû∂Êßã\n" +
                        "‚Ä¢ Âü∫Êñº tessdata_best È´òÂìÅË≥™Ë®ìÁ∑¥Ë≥áÊñô\n" +
                        "‚Ä¢ ÂåÖÂê´Â≠óÂÖ∏ÂíåË™ûË®ÄÊ®°ÂûãÂÑ™Âåñ\n\n" +
                        "üí° Âª∫Ë≠∞‰ΩøÁî®ÊÉÖÊ≥ÅÔºö\n" +
                        "‚Ä¢ PDFÂ≠∏Ë°ìË´ñÊñáÂíåÊäÄË°ìÊñá‰ª∂\n" +
                        "‚Ä¢ ÈúÄË¶ÅÈ´òÊ∫ñÁ¢∫ÁéáÁöÑÈáçË¶ÅÂÖßÂÆπ\n" +
                        "‚Ä¢ Ë§áÈõúÊéíÁâàÂíåÁâπÊÆäÂ≠óÈ´îÁöÑÊñá‰ª∂\n" +
                        "‚Ä¢ Â§öË™ûË®ÄÊ∑∑ÂêàÁöÑÊñáÊ™î";
                break;
        }

        ocrDetailLabel.setText(detailText);

        // Ê∑ªÂä†ÂãïÁï´ÊïàÊûú
        FadeTransition fadeIn = new FadeTransition(Duration.millis(300), ocrDetailLabel);
        fadeIn.setFromValue(0.0);
        fadeIn.setToValue(1.0);
        fadeIn.play();
    }

    private Tab createFunctionsTab() {
        Tab tab = new Tab();
        tab.setClosable(false);

        VBox content = new VBox(20);
        content.setPadding(new Insets(20));
        content.setStyle("-fx-background-color: rgba(50,50,50,0.95);");

        // Êñá‰ª∂ÁÆ°ÁêÜ
        VBox fileSection = createSection("üìÅ Êñá‰ª∂ÁÆ°ÁêÜ", "Ëá™Ë®ÇÊñá‰ª∂ËôïÁêÜË°åÁÇ∫");

        rememberFileCheckBox = new CheckBox("Ë®ò‰ΩèÊúÄÂæåÈñãÂïüÁöÑÊñá‰ª∂");
        rememberFileCheckBox.setSelected(settingsManager.isRememberLastFile());
        rememberFileCheckBox.setStyle("-fx-text-fill: white; -fx-font-size: 13px;");

        Label fileHelpLabel = new Label("üí° ÂïüÁî®ÂæåÊúÉÂú®‰∏ãÊ¨°ÈñãÂïüÊáâÁî®Á®ãÂºèÊôÇËá™ÂãïËºâÂÖ•‰∏äÊ¨°Èñ±ËÆÄÁöÑÊ™îÊ°àÂíåÈ†ÅÁ¢º");
        fileHelpLabel.setStyle("-fx-text-fill: rgba(255,255,255,0.7); -fx-font-size: 11px; -fx-wrap-text: true;");
        fileHelpLabel.setWrapText(true);

        fileSection.getChildren().addAll(rememberFileCheckBox, fileHelpLabel);

        // ‰ªãÈù¢È°ØÁ§∫
        VBox interfaceSection = createSection("üñ•Ô∏è ‰ªãÈù¢È°ØÁ§∫", "Ëá™Ë®Ç‰ΩøÁî®ËÄÖ‰ªãÈù¢");

        showPageNumbersCheckBox = new CheckBox("È°ØÁ§∫È†ÅÁ¢ºË≥áË®ä");
        showPageNumbersCheckBox.setSelected(settingsManager.isShowPageNumbers());
        showPageNumbersCheckBox.setStyle("-fx-text-fill: white; -fx-font-size: 13px;");

        Label interfaceHelpLabel = new Label("üìÑ ÊéßÂà∂Âè≥‰∏ãËßíÈ†ÅÁ¢ºÈ°ØÁ§∫ÔºåÈóúÈñâÂèØÁç≤ÂæóÊõ¥Ê∏ÖÁàΩÁöÑÈñ±ËÆÄÈ´îÈ©ó");
        interfaceHelpLabel.setStyle("-fx-text-fill: rgba(255,255,255,0.7); -fx-font-size: 11px; -fx-wrap-text: true;");
        interfaceHelpLabel.setWrapText(true);

        interfaceSection.getChildren().addAll(showPageNumbersCheckBox, interfaceHelpLabel);

        // Èñ±ËÆÄÈ´îÈ©ó
        VBox readingSection = createSection("üìñ Èñ±ËÆÄÈ´îÈ©ó", "ÂÑ™ÂåñÈñ±ËÆÄËàíÈÅ©Â∫¶");

        enableTouchNavCheckBox = new CheckBox("Ëß∏ÊéßÂ∞éË¶Ω");
        enableTouchNavCheckBox.setSelected(settingsManager.isEnableTouchNavigation());
        enableTouchNavCheckBox.setStyle("-fx-text-fill: white; -fx-font-size: 13px;");

        Label touchHelpLabel = new Label("üëÜ ÂïüÁî®Ëß∏ÊéßËû¢ÂπïÊîØÊè¥ÔºåÂèØÁî®ÊâãÂã¢ÈÄ≤Ë°åÈ†ÅÈù¢Â∞éË¶Ω");
        touchHelpLabel.setStyle("-fx-text-fill: rgba(255,255,255,0.7); -fx-font-size: 11px; -fx-wrap-text: true;");
        touchHelpLabel.setWrapText(true);

        readingSection.getChildren().addAll(enableTouchNavCheckBox, touchHelpLabel);

        // Ëá™Âãï‰øùÂ≠òË®≠ÂÆö
        VBox autoSaveSection = createSection("üíæ Ëá™Âãï‰øùÂ≠ò", "Ë®≠ÂÆöËá™Âãï‰øùÂ≠òÈñìÈöî");

        autoSaveIntervalSlider = new Slider(10, 300, settingsManager.getAutoSaveInterval());
        autoSaveIntervalSlider.setShowTickLabels(true);
        autoSaveIntervalSlider.setShowTickMarks(true);
        autoSaveIntervalSlider.setMajorTickUnit(60);
        autoSaveIntervalSlider.setStyle(
                "-fx-background-color: rgba(70,70,70,0.8); " +
                        "-fx-border-radius: 8; " +
                        "-fx-background-radius: 8;"
        );

        Label intervalLabel = new Label(String.format("%.0f Áßí", autoSaveIntervalSlider.getValue()));
        intervalLabel.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-weight: bold; " +
                        "-fx-background-color: rgba(52,152,219,0.3); " +
                        "-fx-padding: 5 10; " +
                        "-fx-background-radius: 6;"
        );

        autoSaveIntervalSlider.valueProperty().addListener((obs, oldVal, newVal) -> {
            intervalLabel.setText(String.format("%.0f Áßí", newVal.doubleValue()));
        });

        HBox intervalControl = new HBox(15);
        intervalControl.setAlignment(Pos.CENTER_LEFT);
        intervalControl.getChildren().addAll(autoSaveIntervalSlider, intervalLabel);
        HBox.setHgrow(autoSaveIntervalSlider, Priority.ALWAYS);

        Label autoSaveHelpLabel = new Label("‚ö° Ëá™Âãï‰øùÂ≠òÈñ±ËÆÄÈÄ≤Â∫¶ÂíåÊõ∏Á±§ÔºåÈò≤Ê≠¢ÊÑèÂ§ñÈóúÈñâÈÄ†ÊàêË≥áÊñôÈÅ∫Â§±");
        autoSaveHelpLabel.setStyle("-fx-text-fill: rgba(255,255,255,0.7); -fx-font-size: 11px; -fx-wrap-text: true;");
        autoSaveHelpLabel.setWrapText(true);

        autoSaveSection.getChildren().addAll(intervalControl, autoSaveHelpLabel);

        content.getChildren().addAll(
                fileSection,
                createSeparator(),
                interfaceSection,
                createSeparator(),
                readingSection,
                createSeparator(),
                autoSaveSection
        );

        ScrollPane scrollPane = new ScrollPane(content);
        scrollPane.setFitToWidth(true);
        scrollPane.setStyle("-fx-background-color: transparent; -fx-background: transparent;");

        tab.setContent(scrollPane);
        return tab;
    }

    private VBox createSection(String title, String description) {
        VBox section = new VBox(12);

        Label titleLabel = new Label(title);
        titleLabel.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-size: 16px; " +
                        "-fx-font-weight: 700;"
        );

        Label descLabel = new Label(description);
        descLabel.setStyle(
                "-fx-text-fill: rgba(255,255,255,0.8); " +
                        "-fx-font-size: 12px; " +
                        "-fx-wrap-text: true;"
        );

        section.getChildren().addAll(titleLabel, descLabel);
        return section;
    }

    private RadioButton createThemeOption(SettingsManager.ThemeMode theme) {
        RadioButton radio = new RadioButton(theme.getDisplayName());
        radio.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-size: 13px; " +
                        "-fx-font-weight: 500;"
        );
        return radio;
    }

    private RadioButton createOcrOption(SettingsManager.OcrModel model) {
        RadioButton radio = new RadioButton(model.getDisplayName());
        radio.setStyle(
                "-fx-text-fill: white; " +
                        "-fx-font-size: 13px; " +
                        "-fx-font-weight: 500;"
        );
        return radio;
    }

    private Separator createSeparator() {
        Separator separator = new Separator();
        separator.setStyle("-fx-background-color: rgba(255,255,255,0.3);");
        return separator;
    }

    private HBox createButtonBar() {
        HBox buttonBar = new HBox(15);
        buttonBar.setAlignment(Pos.CENTER_RIGHT);
        buttonBar.setPadding(new Insets(20, 0, 0, 0));

        Button cancelButton = new Button("ÂèñÊ∂à");
        cancelButton.setStyle(
                "-fx-background-color: rgba(70,70,70,0.9); " +
                        "-fx-border-color: rgba(255,255,255,0.4); " +
                        "-fx-border-width: 1; " +
                        "-fx-border-radius: 8; " +
                        "-fx-background-radius: 8; " +
                        "-fx-text-fill: white; " +
                        "-fx-font-size: 14px; " +
                        "-fx-font-weight: 600; " +
                        "-fx-padding: 10 20; " +
                        "-fx-cursor: hand;"
        );
        cancelButton.setOnAction(e -> close());

        Button previewButton = new Button("üîç È†êË¶ΩËÆäÊõ¥");
        previewButton.setStyle(
                "-fx-background-color: linear-gradient(to bottom, " +
                        "rgba(230,126,34,0.9), rgba(211,84,0,0.9)); " +
                        "-fx-border-color: rgba(230,126,34,0.8); " +
                        "-fx-border-width: 1; " +
                        "-fx-border-radius: 8; " +
                        "-fx-background-radius: 8; " +
                        "-fx-text-fill: white; " +
                        "-fx-font-size: 14px; " +
                        "-fx-font-weight: 600; " +
                        "-fx-padding: 10 20; " +
                        "-fx-cursor: hand; " +
                        "-fx-effect: dropshadow(gaussian, rgba(230,126,34,0.5), 8, 0, 0, 3);"
        );
        previewButton.setOnAction(e -> previewSettings());

        Button okButton = new Button("Á¢∫ÂÆö");
        okButton.setStyle(
                "-fx-background-color: linear-gradient(to bottom, " +
                        "rgba(52,152,219,0.9), rgba(41,128,185,0.9)); " +
                        "-fx-border-color: rgba(52,152,219,0.8); " +
                        "-fx-border-width: 1; " +
                        "-fx-border-radius: 8; " +
                        "-fx-background-radius: 8; " +
                        "-fx-text-fill: white; " +
                        "-fx-font-size: 14px; " +
                        "-fx-font-weight: 700; " +
                        "-fx-padding: 10 20; " +
                        "-fx-cursor: hand; " +
                        "-fx-effect: dropshadow(gaussian, rgba(52,152,219,0.5), 8, 0, 0, 3);"
        );
        okButton.setOnAction(e -> {
            saveSettings();
            close();
        });

        buttonBar.getChildren().addAll(cancelButton, previewButton, okButton);
        return buttonBar;
    }

    // È†êË¶ΩË®≠ÂÆöËÆäÊõ¥
    private void previewSettings() {
        // Ëá®ÊôÇÊáâÁî®Ë®≠ÂÆöÂà∞‰∏ªÁïåÈù¢
        SettingsManager.ThemeMode originalTheme = settingsManager.getCurrentTheme();
        int originalBrightness = settingsManager.getEyeCareBrightness();

        // ÊáâÁî®Ëá®ÊôÇË®≠ÂÆö
        settingsManager.setThemeMode(tempThemeMode);
        settingsManager.setEyeCareBrightness(tempBrightness);

        showNotification("È†êË¶ΩÊ®°Âºè", "Ë®≠ÂÆöÂ∑≤Ëá®ÊôÇÂ•óÁî®ÔºåÈªûÊìä„ÄåÁ¢∫ÂÆö„Äç‰øùÂ≠òÊàñ„ÄåÂèñÊ∂à„ÄçÊÅ¢Âæ©");

        // 3ÁßíÂæåËá™ÂãïÊÅ¢Âæ©
        Timeline revertTimer = new Timeline(new KeyFrame(Duration.seconds(3), e -> {
            settingsManager.setThemeMode(originalTheme);
            settingsManager.setEyeCareBrightness(originalBrightness);
            showNotification("È†êË¶ΩÁµêÊùü", "Â∑≤ÊÅ¢Âæ©ÂéüÂßãË®≠ÂÆö");
        }));
        revertTimer.play();
    }

    private void saveSettings() {
        // ‰øùÂ≠ò‰∏ªÈ°åË®≠ÂÆö
        if (themeGroup.getSelectedToggle() != null) {
            RadioButton selectedTheme = (RadioButton) themeGroup.getSelectedToggle();
            for (SettingsManager.ThemeMode theme : SettingsManager.ThemeMode.values()) {
                if (theme.getDisplayName().equals(selectedTheme.getText())) {
                    settingsManager.setThemeMode(theme);
                    break;
                }
            }
        }

        // ‰øùÂ≠òOCRË®≠ÂÆö
        if (ocrGroup.getSelectedToggle() != null) {
            RadioButton selectedOcr = (RadioButton) ocrGroup.getSelectedToggle();
            for (SettingsManager.OcrModel model : SettingsManager.OcrModel.values()) {
                if (model.getDisplayName().equals(selectedOcr.getText())) {
                    settingsManager.setOcrModel(model);
                    break;
                }
            }
        }

        // ‰øùÂ≠ò‰∫ÆÂ∫¶Ë®≠ÂÆö
        settingsManager.setEyeCareBrightness((int) brightnessSlider.getValue());

        // ‰øùÂ≠òÂäüËÉΩË®≠ÂÆö
        settingsManager.setRememberLastFile(rememberFileCheckBox.isSelected());
        settingsManager.setShowPageNumbers(showPageNumbersCheckBox.isSelected());
        settingsManager.setEnableTouchNavigation(enableTouchNavCheckBox.isSelected());
        settingsManager.setAutoSaveInterval((int) autoSaveIntervalSlider.getValue());

        // ‰øùÂ≠òÂà∞Êñá‰ª∂
        settingsManager.saveSettings();

        showNotification("Ë®≠ÂÆöÂ∑≤‰øùÂ≠ò", "ÊâÄÊúâËÆäÊõ¥Â∑≤ÊàêÂäüÂ•óÁî®");
    }

    private void showNotification(String title, String message) {
        // Á∞°ÂñÆÁöÑÈÄöÁü•ÂØ¶Áèæ
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    public void show() {
        dialogStage.show();
    }

    public void close() {
        dialogStage.close();
    }
}